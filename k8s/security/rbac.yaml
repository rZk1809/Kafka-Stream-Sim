apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka-stream-sim-sa
  namespace: kafka-stream-sim
  labels:
    app: kafka-stream-sim
    component: security

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kafka-stream-sim-role
  namespace: kafka-stream-sim
  labels:
    app: kafka-stream-sim
    component: security
rules:
# Allow reading ConfigMaps and Secrets
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
# Allow reading Services for service discovery
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch"]
# Allow reading Pods for health checks
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
# Allow creating Events for logging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kafka-stream-sim-rolebinding
  namespace: kafka-stream-sim
  labels:
    app: kafka-stream-sim
    component: security
subjects:
- kind: ServiceAccount
  name: kafka-stream-sim-sa
  namespace: kafka-stream-sim
roleRef:
  kind: Role
  name: kafka-stream-sim-role
  apiGroup: rbac.authorization.k8s.io

---
# Service Account for monitoring components
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka-stream-sim-monitoring-sa
  namespace: kafka-stream-sim
  labels:
    app: kafka-stream-sim
    component: monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kafka-stream-sim-monitoring-role
  namespace: kafka-stream-sim
  labels:
    app: kafka-stream-sim
    component: monitoring
rules:
# Allow reading metrics endpoints
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
# Allow reading metrics from pods
- apiGroups: [""]
  resources: ["pods/metrics"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kafka-stream-sim-monitoring-rolebinding
  namespace: kafka-stream-sim
  labels:
    app: kafka-stream-sim
    component: monitoring
subjects:
- kind: ServiceAccount
  name: kafka-stream-sim-monitoring-sa
  namespace: kafka-stream-sim
roleRef:
  kind: Role
  name: kafka-stream-sim-monitoring-role
  apiGroup: rbac.authorization.k8s.io

---
# ClusterRole for HPA to read metrics
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kafka-stream-sim-hpa-reader
  labels:
    app: kafka-stream-sim
    component: autoscaling
rules:
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
- apiGroups: ["custom.metrics.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kafka-stream-sim-hpa-reader-binding
  labels:
    app: kafka-stream-sim
    component: autoscaling
subjects:
- kind: ServiceAccount
  name: kafka-stream-sim-sa
  namespace: kafka-stream-sim
roleRef:
  kind: ClusterRole
  name: kafka-stream-sim-hpa-reader
  apiGroup: rbac.authorization.k8s.io

---
# Pod Security Policy (deprecated in K8s 1.25+, use Pod Security Standards instead)
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: kafka-stream-sim-psp
  labels:
    app: kafka-stream-sim
    component: security
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: false
  seLinux:
    rule: 'RunAsAny'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kafka-stream-sim-psp-role
  namespace: kafka-stream-sim
  labels:
    app: kafka-stream-sim
    component: security
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames:
  - kafka-stream-sim-psp

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kafka-stream-sim-psp-rolebinding
  namespace: kafka-stream-sim
  labels:
    app: kafka-stream-sim
    component: security
subjects:
- kind: ServiceAccount
  name: kafka-stream-sim-sa
  namespace: kafka-stream-sim
roleRef:
  kind: Role
  name: kafka-stream-sim-psp-role
  apiGroup: rbac.authorization.k8s.io
